name: Deploy Nginx
on:
  push:
    branches:
      - main

jobs:
  build-security-deploy-test:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Cache Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./nginx-project
          file: ./nginx-project/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: deepika2897/nginx:${{ env.IMAGE_TAG }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.29.0
        continue-on-error: true
        with:
          image-ref: 'deepika2897/nginx:${{ env.IMAGE_TAG }}'
          format: 'table'
          output: 'trivy-results.txt'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Print Trivy Scan Results
        run: cat trivy-results.txt

      - name: Push Multi-Arch Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./nginx-project
          file: ./nginx-project/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: deepika2897/nginx:${{ env.IMAGE_TAG }}

      - name: Set up Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube start --driver=docker --kubernetes-version=stable

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Create Kubernetes namespace
        run: kubectl apply -f ./nginx-project/namespace.yaml --validate=false

      - name: Create Kubernetes secret
        run: |
          echo "${{ secrets.SSL_CERT }}" | base64 --decode > /tmp/cision.crt
          echo "${{ secrets.SSL_KEY }}" | base64 --decode > /tmp/cision.key
          kubectl create secret tls nginx-tls \
            --cert=/tmp/cision.crt \
            --key=/tmp/cision.key \
            --namespace=ns-nginx

      - name: Deploy StatefulSet
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          envsubst < ./nginx-project/nginx-statefulset.yaml | kubectl apply -f -
          kubectl rollout status statefulset/nginx-statefulset -n ns-nginx

      - name: Deploy Service
        run: kubectl apply -f ./nginx-project/nginx-service.yaml

      - name: Wait and Test Connection
        run: |
          kubectl wait --for=condition=Ready pod/nginx-statefulset-0 -n ns-nginx --timeout=2m
          kubectl port-forward svc/nginx-service 8443:443 -n ns-nginx &
          sleep 15
          curl -k --max-time 10 https://localhost:8443 || echo "Connection test failed"
