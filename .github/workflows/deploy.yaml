name: Deploy Nginx

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: deepika2897/nginx-image:latest

  deploy-to-k8s:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Create Kubernetes namespace
        run: kubectl apply -f namespace.yaml

      - name: Create Kubernetes secret
        run: |
          kubectl create secret tls nginx-tls \
            --cert=/Users/deepikarajendran/ssl/cision.crt \
            --key=/Users/deepikarajendran/ssl/cision.key \
            --namespace=ns-nginx

      - name: Deploy StatefulSet
        run: kubectl apply -f nginx-statefulset.yaml

      - name: Deploy Service
        run: kubectl apply -f nginx-service.yaml

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@v0.2.0
        with:
          image-ref: deepika2897/nginx-image:latest

  test-connection:
    runs-on: ubuntu-latest
    needs: deploy-to-k8s
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Minikube
        uses: medyagh/setup-minikube@latest

      - name: Port forward and test connection
        run: |
          kubectl port-forward svc/nginx-service 8443:443 -n ns-nginx &
          sleep 10
          curl -k https://localhost:8443
